{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "BastionHostKeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "The name of the private key file to use for SSH/RDP access to the bastion host."
        },
        "BastionSecurityCIDR": {
            "Type": "String",
            "Description": "The CIDR range to use to lock down security on the bastion host.",
            "Default": "0.0.0.0/0"
        }
    },
    "Mappings": {
        "AmazonLinuxAMI": {
            "us-east-1": {
                "AMI": "ami-1ecae776"
            },
            "us-west-1": {
                "AMI": "ami-d114f295"
            },
            "us-west-2": {
                "AMI": "ami-e7527ed7"
            },
            "eu-west-1": {
                "AMI": "ami-a10897d6"
            },
            "eu-central-1": {
                "AMI": "ami-a8221fb5"
            },
            "sa-east-1": {
                "AMI": "ami-b52890a8"
            },
            "ap-southeast-1": {
                "AMI": "ami-68d8e93a"
            },
            "ap-southeast-2": {
                "AMI": "ami-fd9cecc7"
            },
            "ap-northeast-1": {
                "AMI": "ami-cbf90ecb"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.1.0.0/16",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Lab VPC"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC"
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": [
                "VPC",
                "InternetGateway"
            ],
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.1.10.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public Subnet 1"
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.1.50.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private Subnet 1"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.1.51.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private Subnet 2"
                    }
                ]
            }
        },
        "PublicRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": [
                "VPC",
                "AttachGateway"
            ],
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PublicRoute1": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [
                "PublicRouteTable1",
                "AttachGateway"
            ],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [
                "PublicRouteTable1",
                "PublicSubnet1",
                "AttachGateway"
            ],
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable1"
                }
            }
        },
        "PrivateRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [
                "PublicRouteTable1",
                "PrivateSubnet1",
                "AttachGateway"
            ],
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable1"
                }
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateRouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private Route Table 2 "
                    }
                ]
            }
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [
                "PublicRouteTable1",
                "PrivateSubnet2",
                "AttachGateway"
            ],
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable2"
                }
            }
        },
        "PrivateNetworkAcl2": {
            "Type": "AWS::EC2::NetworkAcl",
            "DependsOn": "AttachGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private ACL 2"
                    }
                ]
            }
        },
        "NatInstanceWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {}
        },
        "NatInstanceWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "NATInstance",
            "Properties": {
                "Handle": {
                    "Ref": "NatInstanceWaitHandle"
                },
                "Timeout": "1800"
            }
        },
        "NATInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "AttachGateway",
                "PublicRoute1",
                "PublicSubnet1"
            ],
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "KeyName": {
                    "Ref": "BastionHostKeyName"
                },
                "InstanceType": "t2.small",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": "true",
                        "SubnetId": {
                            "Ref": "PublicSubnet1"
                        },
                        "GroupSet": [
                            {
                                "Ref": "NATSecurityGroup"
                            }
                        ]
                    }
                ],
                "SourceDestCheck": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum -y update\n",
                                "echo 1 > /proc/sys/net/ipv4/ip_forward\n",
                                "echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects\n",
                                "/sbin/iptables -t nat -A POSTROUTING -o eth0 -s 0.0.0.0/0 -j MASQUERADE\n",
                                "/sbin/iptables-save > /etc/sysconfig/iptables\n",
                                "mkdir -p /etc/sysctl.d/\n",
                                "cat << NatConfFileMarker > /etc/sysctl.d/nat.conf\n",
                                "net.ipv4.ip_forward = 1\n",
                                "net.ipv4.conf.eth0.send_redirects = 0\n",
                                "NatConfFileMarker\n\n",
                                "/opt/aws/bin/cfn-signal -s true '",
                                {
                                    "Ref": "NatInstanceWaitHandle"
                                },
				"'\n"
                            ]
                        ]
                    }
                }
            }
        },
        "NATSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "AttachGateway",
            "Properties": {
                "GroupDescription": "Enable internal access to the NAT device",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "1024",
                        "CidrIp": "10.1.50.0/23"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "PrivateRoute1": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [
                "NatInstanceWaitCondition",
                "PrivateRouteTable1"
            ],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NATInstance"
                }
            }
        },
        "BastionServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "AttachGateway",
            "Properties": {
                "GroupDescription": "Security Group for bastion server",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "BastionServerSecurityGroup"
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": "CloudFormationResource"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "BastionSecurityCIDR"
                        }
                    }
                ]
            }
        },
        "BastionServer": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "NATInstance"
            ],
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "BastionHostKeyName"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": "true",
                        "SubnetId": {
                            "Ref": "PublicSubnet1"
                        },
                        "GroupSet": [
                            {
                                "Ref": "BastionServerSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "BastionServer"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex \n",
                                "yum -y update \n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "AttachGateway",
            "Properties": {
                "GroupDescription": "Security Group for Web server",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WebServerSecurityGroup"
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": "CloudFormationResource"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AmazonLinuxAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "state=0\n",
                                "yum -y update\n",
                                "yum -y install httpd php\n",
                                "chkconfig httpd on\n",
                                "/etc/init.d/httpd start\n",
                                "cd /var/www/html\n",
                                "wget https://d2lrzjb0vjvpn5.cloudfront.net/developing/v2.0/demos/ec2-info.zip\n",
                                "unzip ec2-info.zip\n",
                                "/opt/aws/bin/cfn-signal -e $state --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource AppAutoScalingGroup --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "InstanceType": "t2.micro",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdf",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ]
            }
        },
        "AppAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "DependsOn": [
                "LaunchConfig",
                "NatInstanceWaitCondition"
            ],
            "Properties": {
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfig"
                },
                "MinSize": "2",
                "MaxSize": "6",
                "HealthCheckType": "ELB",
                "HealthCheckGracePeriod": "300",
                "LoadBalancerNames": [
                    {
                        "Ref": "AppLoadBalancer"
                    }
                ],
                "Tags": [
                    {
                        "Key": "ApplicationRole",
                        "Value": "OurWebApp",
                        "PropagateAtLaunch": "true"
                    },
		    {
			"Key": "Name",
			"Value": "AppServer",
			"PropagateAtLaunch": "true"
		    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "2",
                    "Timeout": "PT15M"
                }
            }
        },
        "AppLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "DependsOn": [
                "WebServerSecurityGroup"
            ],
            "Properties": {
                "Listeners": [
                    {
                        "LoadBalancerPort": "80",
                        "InstancePort": "80",
                        "Protocol": "HTTP"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet1"
                    }
                ],
                "HealthCheck": {
                    "Target": "HTTP:80/ec2-info/index.php",
                    "HealthyThreshold": "3",
                    "UnhealthyThreshold": "5",
                    "Interval": "10",
                    "Timeout": "5"
                }
            }
        }
    },
    "Outputs": {
        "AppAutoScalingGroupName": {
            "Description": "Name of the Auto Scaling group",
            "Value": {
                "Ref": "AppAutoScalingGroup"
            }
        },
        "ELBEndpoint": {
            "Description": "The URL for our Elastic Load Balancer.",
            "Value": {
                "Fn::GetAtt": [
                    "AppLoadBalancer",
                    "DNSName"
                ]
            }
        }
    }
}